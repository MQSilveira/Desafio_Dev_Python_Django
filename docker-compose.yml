version: '3.8'
services:
  db:
    container_name: postgres_db
    image: postgres:14.1-alpine
    restart: always
    env_file: .env
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]

  web:
    container_name: django
    build:
      context: ./Back-end
      dockerfile: Dockerfile
    command: python manage.py runserver 0.0.0.0:8000
    stdin_open: true
    tty: true
    ports:
      - 8000:8000
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

  frontend:
    container_name: react
    build:
      context: ./Front-end
      dockerfile: Dockerfile
    ports:
      - "3000:3000"

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - 5672:5672
      - 15672:15672
    environment:
        - RABBITMQ_DEFAULT_USER=guest
        - RABBITMQ_DEFAULT_PASS=guest
  
  celery:
    container_name: celery
    build:
      context: ./Back-end
      dockerfile: Dockerfile
    restart: always
    command: celery -A sistema_gestao_propostas worker -l info
    volumes:
      - ./code
    environment:
      - CELERY_BROKER_URL=amqp://guest:guest@rabbitmq:5672//
    env_file:
      - ./Back-end/.env
    depends_on:
      - rabbitmq
    links:
      - rabbitmq


  migrations:
    container_name: migrations
    build:
      context: ./Back-end
    environment:
    - DJANGO_SUPERUSER_USERNAME=admin
    - DJANGO_SUPERUSER_PASSWORD=admin
    - DJANGO_SUPERUSER_EMAIL=admin@example.com
    command: >
      bash -c "python manage.py migrate && python manage.py createsuperuser --no-input"
    depends_on:
      db:
        condition: service_healthy
